---
- name: Add hosts to /etc/hosts for resolve
  template:
    src: hosts.j2
    dest: /etc/hosts
  tags: 
    - resolve

- name: Cat public keys for root
  shell: cat /root/.ssh/id_rsa.pub
  register: root_public_key
  tags:
    - ssh

- name: Cat public keys for hosts
  shell: cat /etc/ssh/ssh_host_rsa_key.pub
  register: host_public_key
  tags:
    - ssh

- name: Add authorized keys for root user
  authorized_key:
    user: root
    state: present
    key: "{{ hostvars[item]['root_public_key']['stdout'] }}"
  with_items: "{{ groups[target+'_drbd_nodes'] }}"
  when: item != inventory_hostname
  tags:
    - ssh

- name: Add host_public_key (IP) to known hosts
  known_hosts:
    name: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}"
    path: /root/.ssh/known_hosts
    key: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ hostvars[item]['host_public_key']['stdout'] }}"
  with_items: "{{ groups[target+'_drbd_nodes'] }}"
  when: item != inventory_hostname
  tags:
    - ssh

- name: Add host_public_key (hostname_short) to known hosts
  known_hosts:
    name: "{{ hostvars[item]['inventory_hostname_short']}}"
    path: /root/.ssh/known_hosts
    key: "{{ hostvars[item]['inventory_hostname_short'] }} {{ hostvars[item]['host_public_key']['stdout'] }}"
  with_items: "{{ groups[target+'_drbd_nodes'] }}"
  when: item != inventory_hostname
  tags:
    - ssh

- name: Add host_public_key (FQDN) to known hosts
  known_hosts:
    name: "{{ item }}"
    path: /root/.ssh/known_hosts
    key: "{{ item }} {{ hostvars[item]['host_public_key']['stdout'] }}"
  with_items: "{{ groups[target+'_drbd_nodes'] }}"
  when: item != inventory_hostname
  tags:
    - ssh

- name: Comment proxmox enterprise repository
  lineinfile:
    dest: /etc/apt/sources.list.d/pve-enterprise.list
    regexp: '^'
    line: '#deb https://enterprise.proxmox.com/debian jessie pve-enterprise'
    state: present
  tags:
    - update

   
#- name: Reboot
#  shell: reboot
#  async: yes
#  when: reboot | default(False)
#  tags:
#    - reboot

#- name: Wait for reboot
#  wait_for:
#    port: 22
#    state: stopped
#  when: reboot | default(False)
#  tags:
#    - reboot

#- name: local action
#  wait_for:
#    port: 22
#    host: "{{ ansible_default_ipv4.address }}"
#    timeout: 60
#  delegate_to: localhost
#  tags:
#    - reboot

#- name: Wait to start hosts
#  wait_for:
#    port: 8006
#    state: started
#  tags:
#    - reboot

